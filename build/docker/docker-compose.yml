version: '3.9'


services:
  reverse-proxy:
    image: ${traefik_image:-traefik:latest}
    networks:
      internal-net:
        aliases:
          - internal-net-traefik
    command: --api.insecure=true --providers.docker
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 3s
      restart_policy:
        condition: any
        max_attempts: 20
        window: 10s
        delay: 3s
      resources:
        limits:
          cpus: "2"
          memory: "5G"
        reservations:
          cpus: "0.5"
          memory: "0.2G"

  backend:
    image: ${api_image:-test-api:latest}
    environment:
      - PORT=${API_PORT:-8000}
    networks:
      internal-net:
        aliases:
          - internal-net-test-api
          - test-api
    labels:
        - "traefik.http.routers.backend.rule=(PathPrefix(`/api`) && Method(`POST`)) || (Path(`/health`) && Method(`GET`))"
        - "traefik.http.services.backend.loadbalancer.server.port=${API_PORT:-8000}"
        - "traefik.http.services.backend.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.backend.loadbalancer.healthcheck.interval=60s"
        - "traefik.http.services.backend.loadbalancer.healthcheck.timeout=10s"
    deploy:
      mode: replicated
      replicas: ${API_REPLICAS:-1}
      update_config:
        parallelism: 1
        delay: 3s
      restart_policy:
        condition: any
        max_attempts: 20
        window: 10s
        delay: 3s
      resources:
        limits:
          cpus: "1"
          memory: "0.05G"
        reservations:
          cpus: "0.5"
          memory: "0.2G"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:${API_PORT:-8000}/health"]
      interval: 15s
      timeout: 10s
      retries: 3

  static:
    image: ${static_image:-test-static:latest}
    environment:
      - PORT=${STATIC_PORT:-3000}
    networks:
      internal-net:
        aliases:
          - internal-net-test-static
          - test-static
    labels:
        - "traefik.http.routers.static.rule=PathPrefix(`/`) && Method(`GET`, `HEAD`)"
        - "traefik.http.services.static.loadbalancer.server.port=${STATIC_PORT:-3000}"
        - "traefik.http.services.static.loadbalancer.healthcheck.path=/"
        - "traefik.http.services.static.loadbalancer.healthcheck.interval=60s"
        - "traefik.http.services.static.loadbalancer.healthcheck.timeout=10s"
    deploy:
      mode: replicated
      replicas: ${STATIC_REPLICAS:-1}
      update_config:
        parallelism: 1
        delay: 3s
      restart_policy:
        condition: any
        max_attempts: 20
        window: 10s
        delay: 3s
      resources:
        limits:
          cpus: "1"
          memory: "0.05G"
        reservations:
          cpus: "0.5"
          memory: "0.2G"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:${STATIC_PORT:-3000}"]
      interval: 15s
      timeout: 10s
      retries: 3


networks:
  internal-net:

